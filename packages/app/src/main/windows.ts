import { BrowserWindow, Menu } from 'electron';
import { getIconPath } from './paths';
import { ExitApplication, isQuitting } from './tray';
// This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MATCH_WINDOW_WEBPACK_ENTRY: string;
declare const SETTINGS_WINDOW_WEBPACK_ENTRY: string;

let matchWindow: null | BrowserWindow = null;

export const openMatchWindow = () => {
  if (!matchWindow) {
    // create window if it doesnt exist
    matchWindow = new BrowserWindow({
      icon: getIconPath(),
      height: 600,
      width: 800
    });

    matchWindow.setMenu(Menu.buildFromTemplate([
      {
        label: '&Settings',
        click: () => {
          openSettingsWindow();
        }
      },
      {
        label: '&Exit',
        click: ExitApplication
      }
    ]));
    matchWindow.loadURL(MATCH_WINDOW_WEBPACK_ENTRY);
    matchWindow.on("close", (event)=> {
      if (!isQuitting()) {
        event.preventDefault();
        matchWindow.hide();
      }
    });
  } else {
    // focus window if it exists
    matchWindow.show();
    matchWindow.focus();
  }
}

let settingsWindow: null | BrowserWindow = null;

export const openSettingsWindow = () => {
  if (!settingsWindow) {
    // create window if it doesnt exist
    settingsWindow = new BrowserWindow({
      icon: getIconPath(),
      height: 600,
      width: 800
    });

    settingsWindow.setMenu(Menu.buildFromTemplate([]));
    settingsWindow.loadURL(SETTINGS_WINDOW_WEBPACK_ENTRY);
    settingsWindow.on("close", (event)=> {
      if (!isQuitting()) {
        event.preventDefault();
        settingsWindow.hide();
      }
    });
  } else {
    // focus window if it exists
    settingsWindow.show();
    settingsWindow.focus();
  }
}

let webWindow: null | BrowserWindow = null;

export const openWebWindow = (url: string) => {
  if (!webWindow) {
    // create window if it doesnt exist
    webWindow = new BrowserWindow({
      icon: getIconPath(),
      height: 800,
      width: 1260
    });

    webWindow.setMenu(Menu.buildFromTemplate([]));
    webWindow.loadURL(url);
    webWindow.on("close", (event)=> {
      if (!isQuitting()) {
        event.preventDefault();
        webWindow.hide();
      }
    });
  } else {
    // focus window if it exists
    webWindow.show();
    webWindow.loadURL(url);
    webWindow.focus();
  }
}
